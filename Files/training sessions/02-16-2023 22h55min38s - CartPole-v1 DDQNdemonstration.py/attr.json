{
    "_os": "Box([-4.8000002e+00 -3.4028235e+38 -4.1887903e-01 -3.4028235e+38], [4.8000002e+00 3.4028235e+38 4.1887903e-01 3.4028235e+38], (4,), float32)",
    "_as": "Discrete(2)",
    "steps": 716702,
    "_epsilon": 0.05,
    "greedy": false,
    "_device": "cpu",
    "memory": "<MyModule.MemoryBuffer.MemoryBuffer object at 0x00000252ED31D6C0>",
    "_network": "Sequential(\n  (0): Linear(in_features=4, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=64, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=64, out_features=2, bias=True)\n)",
    "_optimizer": "Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n    capturable: False\n    differentiable: False\n    eps: 1e-08\n    foreach: None\n    fused: False\n    lr: 0.0001\n    maximize: False\n    weight_decay: 0\n)",
    "_target": "Sequential(\n  (0): Linear(in_features=4, out_features=64, bias=True)\n  (1): ReLU()\n  (2): Linear(in_features=64, out_features=64, bias=True)\n  (3): ReLU()\n  (4): Linear(in_features=64, out_features=2, bias=True)\n)",
    "TAU": 1,
    "N": 2000,
    "_copy_weights": "<function DDQNAgent._copy_weights at 0x00000252ED320820>",
    "_compute_loss": "<function DQNAgent._compute_loss at 0x00000252EB7EA290>",
    "train": "<function DQNAgent.train at 0x00000252EB7EA320>",
    "gamma": 0.99,
    "decay": 0.99994,
    "min_epsilon": 0.05,
    "lr": 0.0001,
    "get_action": "<function DQNAgent.get_action at 0x00000252EB7EA200>",
    "save": "<function DQNAgent.save at 0x00000252EB7EA3B0>",
    "e": "<property object at 0x00000252EB7E2890>"
}